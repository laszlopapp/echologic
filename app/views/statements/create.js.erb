<% if defined? @info %>
  info('<%=@info%>')
<% end %>

/* if we came directly from one of the new statement links in search or my questions, then html response */
if(!window.location.href.match(/\/\d+/)) {
  window.location.replace("<%= escape_javascript(statement_node_url(@statement_node, :origin => params[:origin], :bids => params[:bids], :escape => false)) %>");
}

/* load new statement to session */
<% if @statement_node.class.is_top_statement? or @statement_node.level == 0 %>
  var session_id = 'roots';
<% else %>
  var session_id = '<%= dom_class(@statement_node.parent_node) %>';
<% end %>

var session_data =  $('div#statements').data(session_id);
if (session_data != null) {
	session_data.unshift(<%= @statement_node.target_id %>);
	$('div#statements').data(session_id, session_data);
} else {
  session_data = [<%= @statement_node.target_id %>, "add/<%= node_type(@statement_node) %>"]
}




var bids = $('#breadcrumbs').data('breadcrumbApi').getBreadcrumbStack(null);

var origin_bids = getOriginKeys(bids);
var origin = origin_bids[origin_bids.length-1];
if (origin == null || origin == "undefined"){origin = '';}

$.setFragment({ "nl" : '', "origin" : origin});

var element = $("<%= escape_javascript(render :partial => 'statements/show', :locals => {:statement_node => @statement_node.target_statement}) %>").statement({'level' : <%= @statement_node.level %>});
element.data('api').removeBelow();

/* Statements' stack */
var sids = $('div#statements div.statement').map(function(){
  return this.id.replace(/[^0-9]+/, "");
}).get();

$.setFragment({ "sids": sids.join(','), "bids" : bids.join(',') });